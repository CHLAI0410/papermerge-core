name: Tests
on: [push]
jobs:
  check-pep8-compliance:
    runs-on: ubuntu-20.04

    services:
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pycodestyle
      - name: Validate PEP8 compliance
        run: pycodestyle papermerge/ tests/

  tests_core:
    needs: check-pep8-compliance
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install redis
        run: sudo apt-get install -y redis-tools redis-server
      - name: Install tesseract debian packages
        run: |
          sudo apt-get install tesseract-ocr tesseract-ocr-deu imagemagick poppler-utils
      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install && poetry run test-core
        env:
          PYTHONPATH: .
  tests_search:
    needs: check-pep8-compliance
    runs-on: ubuntu-20.04
    steps:
      - name: Install and Run Elasticsearch
        uses: elastic/elastic-github-actions/elasticsearch@master
        with:
          stack-version: "7.13.4"
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install redis
        run: sudo apt-get install -y redis-tools redis-server
      - name: Install tesseract debian packages
        run: |
          sudo apt-get install tesseract-ocr tesseract-ocr-deu imagemagick poppler-utils
      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install && poetry run task test-search
        env:
          PYTHONPATH: .
#  publish-to-pypi:
#    needs:
#      - tests_core
#      - tests_search
#    runs-on: ubuntu-20.04
#    steps:
#      - uses: actions/checkout@v2
#      - name: Set up Python 3.7
#        uses: actions/setup-python@v2
#        with:
#          python-version: 3.7
#      - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip
#         pip install build
#      - name: Build a binary wheel and a source tarball
#        run: |
#          python setup.py sdist
#      - name: Publish ðŸ“¦ to PyPI
#        if: startsWith(github.ref, 'refs/tags')
#        uses: pypa/gh-action-pypi-publish@master
#        with:
#          password: ${{ secrets.PYPI_API_TOKEN }}
