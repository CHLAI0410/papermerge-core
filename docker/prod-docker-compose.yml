version: '3.7'
# Any top-level key starting with x- in a Docker Compose file will be
# ignored
x-backend: &backend  # yaml anchor definition
  image: ${APP_IMAGE}:${APP_TAG}
  depends_on:
    - backend_init
  volumes:
    - media_root:/app/media
  environment:
    - PAPERMERGE_SECRET_KEY=${SECRET_KEY}
    - PAPERMERGE_DATABASE_TYPE=postgres
    - PAPERMERGE_DATABASE_USER=${DB_USER}
    - PAPERMERGE_DATABASE_NAME=${DB_NAME}
    - PAPERMERGE_DATABASE_PASSWORD=${DB_PASSWORD}
    - PAPERMERGE_DATABASE_HOST=${DB_HOST}
    - PAPERMERGE_REDIS_HOST=${REDIS_HOST}
    - PAPERMERGE_REDIS_PORT=${REDIS_PORT}
    - PAPERMERGE_ELASTICSEARCH_HOSTS=${ES_HOSTS}
    - PAPERMERGE_ELASTICSEARCH_PORT=${ES_PORT}
    - DJANGO_SUPERUSER_USERNAME=${SUPERUSER_USERNAME}
    - DJANGO_SUPERUSER_EMAIL=${SUPERUSER_EMAIL}
    - DJANGO_SUPERUSER_PASSWORD=${SUPERUSER_PASSWORD}
    - DJANGO_SETTINGS_MODULE=config.settings
services:
  worker: # celery worker
    <<: *backend
    command: worker
  ws_server:  # websockets server / daphne
    <<: *backend
    command: ws_server
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ws_server.rule=Host(`papermerge.local`) && PathPrefix(`/ws/`)"
  backend:  # rest api backend / uwsgi
    <<: *backend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`papermerge.local`) && (PathPrefix(`/api/`) || PathPrefix(`/static/`) || PathPrefix(`/auth/`))"
      - "traefik.http.middlewares.backend-strip.stripprefix.forceSlash=false"
  backend_init:
    <<: *backend
    depends_on:
      - db
      - redis
      - es
    command: init
  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
  redis:
    image: 'redis:6'
    ports:
      - '6379:6379'
    volumes:
      - 'redisdata:/data'
  traefik:
    image: "traefik:v2.5"
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
  frontend: # emberjs
    image: ${PAPERMERGE_JS_IMAGE}:${PAPERMERGE_JS_TAG}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`papermerge.local`) && PathPrefix(`/`)"
  es:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.16.2
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - 9200:9200
      - 9300:9300
volumes:
  postgres_data:
  media_root:
  redisdata:
